@font-face {
    font-family: Monument Extended;
    src: url('assets/MonumentExtended-Regular.otf');
}
html, body {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Monument Extended";
    background-color: #000;
    text-transform: uppercase;
    color: #fff;
    overflow: hidden;
}

.glitch {
  position: relative;

  &::after, &::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
  }

  &::before {
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim-1 5s infinite alternate-reverse;
  }

  &::after {
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim-2 2s infinite alternate-reverse;
  }
}

.hero-section {
    
    &__video-container {
        opacity: 0;
        pointer-events: none;
        margin: 0 auto;
        height: 660px;
        width: 1333.33333px;
        position: absolute;
        top: 55%;
        left: 50%;
        transform: translate(-50%, -50%) scale(3);
    }

    &__video {
        position: relative;
        height: 100%;
        width: 100%;
        object-fit: cover;
    }

    &__title {
      position: absolute;
      top: 60%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 10;
      pointer-events: none;
      font-size: 80px;
      
      @media screen and (min-width: 900px) {
        top: 40%;
        left: 20%;
      }
    }
}

.logo {
  height: 200px;
  width: 375px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
}

.menu {
  font-size: 20px;
  line-height: 80px;
  // margin: 0 40px;
  position: absolute;
  top: 20px;
  right: 30px;
  z-index: 10;

  @media screen and (min-width: 900px) {
    right: 60px;
  }

}

// .navigation {
//   position: relative;
//   z-index: 10;
//   display: flex;
//   align-items: center;
//   justify-content: space-between;
//   padding: 20px;
// }

.noise {
    position: absolute;
    top: -500px;
    right: -500px;
    bottom: -500px;
    left: -500px;
    background: transparent url('assets/noise.png') 0 0;
    background-size: 320px 320px;
    opacity: .35;
    animation: noise 1s steps(8,end) infinite both;
}

.noise-wrapper {
  opacity: 0;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 5;

  &:after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: radial-gradient(ellipse at center, rgba(0,0,0,0) 0%,rgba(0,0,0,0.75) 100%);
  }
}

.progress {

  &__container {
    width: 152px;
    height: 1px;
    position: absolute;
    top: 62%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  &__bar {
    height: 5px;
    border-radius: 5px;
    background-color: purple;
    transition: width 2s ease;
    width: 10px;
    max-width: 152px;
  }
}


.social {
  position: absolute;
  bottom: 0;
  right: 2%;
  z-index: 10;

  &__item {
    display: inline-block;
    list-style: none;
  }

  &__link {
    color: #fff;
  }
}


.wrapper {
  position: relative;
  width: 100vw;
  height: 100vh;
}


@keyframes noise {
  0% {
    transform: translateX(0px,0px); }
  10% {
    transform: translate(-100px, 100px);
  }
  20% {
    transform: translate(150px, -100px);
  }
  30% {
    transform: translate(-100px,100px);
  }
  40% {
    transform: translate(100px, -150px);
  }
  50% {
    transform: translate(-100px, 200px);
  }
  60% {
    transform: translate(-200px, -100px);
  }
  70% {
    transform: translateY(50px, 100px);
  }
  80% {
    transform: translate(100px, -150px);
  }
  90% {
    transform: translate(0px, 200px);
  }
  100% {
    transform: translate(-100px, 100px);
  }
}

@keyframes glitch-anim-1 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}

@keyframes glitch-anim-2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}
